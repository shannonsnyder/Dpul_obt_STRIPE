#!/bin/bash

#Setting variables:
#
DIR=/home/ssnyde11/scratch/STRIPE_OCT/Dpul_obt_STRIPE
source ${DIR}/DpSTRIPE.configfile 
SCRIPTS=/home/ssnyde11/scratch/STRIPE_OCT/Dpul_obt_STRIPE/scripts
#No further edits necessary from here on ...
#

#mkdir ${fastqDIR}
cd ${fastqdir}

#Trimming the reads with trimmomatic:
#
#echo "time ${SCRIPTS}/run_trimmomatic.sh"
time ${SCRIPTS}/run_trimmomatic.sh

#Removing ribosomal RNA hits with tagdust:
#

POV_2014_84_R1=POV-2014-84-3_S11_R1_001.fastq
POV_2014_84_R2=POV-2014-84-3_S11_R2_001.fastq

OA_15_R2=OA-15-2_S12_R2_001.fastq
OA_15_R1=OA-15-2_S12_R1_001.fastq

NFL3_R2=NFL-3-6_S5_R2_001.fastq
NFL3_R1=NFL-3-6_S5_R1_001.fastq

LPB_2014_32_rep1_R2=LPB-2014-32-5_S9_R2_001.fastq
LPB_2014_32_rep1_R1=LPB-2014-32-5_S9_R1_001.fastq

LPB_2014_32_rep2_R2=LPB-2014-32-3_S8_R2_001.fastq
LPB_2014_32_rep2_R1=LPB-2014-32-3_S8_R1_001.fastq

LPB_2014_32_rep3_R2=LPB-2014-32-2_S7_R2_001.fastq
LPB_2014_32_rep3_R1=LPB-2014-32-2_S7_R1_001.fastq

LPA_2014_16_R2=LPA-2014-16-3_S6_R2_001.fastq
LPA_2014_16_R1=LPA-2014-16-3_S6_R1_001.fastq

KAP_2013_114_R2=KAP-2013-114-3_S10_R2_001.fastq
KAP_2013_114_R1=KAP-2013-114-3_S10_R1_001.fastq

undetermined_R1=Undetermined_S0_R1_001.fastq
undetermined_R2=Undetermined_S0_R2_001.fastq

OP1=${POV_2014_84_R1}_trno_tagdusted
OP2=${POV_2014_84_R2}_trno_tagdusted
OP3=${OA_15_R2}_trno_tagdusted
OP4=${OA_15_R1}_trno_tagdusted
OP5=${LPB_2014_32_rep1_R2}_trno_tagdusted
OP6=${LPB_2014_32_rep1_R1}_trno_tagdusted
OP7=${LPB_2014_32_rep2_R2}_trno_tagdusted
OP8=${LPB_2014_32_rep2_R1}_trno_tagdusted
OP9=${LPB_2014_32_rep3_R2}_trno_tagdusted
OP10=${LPB_2014_32_rep3_R1}_trno_tagdusted
OP11=${LPA_2014_16_R2}_trno_tagdusted
OP12=${LPA_2014_16_R1}_trno_tagdusted
OP13=${KAP_2013_114_R2}_trno_tagdusted
OP14=${KAP_2013_114_R1}_trno_tagdusted
OP15=${undetermined_R1}_trno_tagdusted
OP16=${undetermined_R2}_trno_tagdusted



${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${POV_2014_84_R1} -o ${OP1}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${POV_2014_84_R2} -o ${OP2}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${OA_15_R2} -o ${OP3}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${OA_15_R1} -o ${OP4}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${LPB_2014_32_rep1_R2} -o ${OP5}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${LPB_2014_32_rep1_R1} -o ${OP6}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${LPB_2014_32_rep2_R2} -o ${OP7}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${LPB_2014_32_rep2_R1} -o ${OP8}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${LPB_2014_32_rep3_R2} -o ${OP9}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${LPB_2014_32_rep3_R1} -o ${OP10}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${LPA_2014_16_R2} -o ${OP11}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${LPA_2014_16_R1} -o ${OP12}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${KAP_2013_114_R2} -o ${OP13}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${KAP_2013_114_R1} -o ${OP14}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${undetermined_R1} -o ${OP15}
${TAGDUST} -ref ${RNAfile} -dust 97 -t ${THREADS} -fe 3 -1 R:N ${undetermined_R2} -o ${OP16}
cd ..

#Mapping the reads with the BWA aligner:
#
echo "time ${SCRIPTS}/run_BWA_alignment.sh"
time ${SCRIPTS}/run_BWA_alignment.sh

#Scrubbing and removal of PCR duplicates:
#

BWAdir=${BASEDIR}/scratch/${EXPERIMENT}/${SAMPLE}/BWAdir
mkdir=$BWAdir 
cd ${BWAdir}

for BAM in *_filtered.bam; do

    echo "${SAMTOOLS} sort -n ${BAM} | ${SAMTOOLS} view -bh > $(basename $BAM _filtered.bam)_filtered_sorted.bam"
    ${SAMTOOLS} sort -n ${BAM} | ${SAMTOOLS} view -bh > $(basename $BAM _filtered.bam)_filtered_sorted.bam                         

# ... scrubbing: we remove singlets left over by the samtools -f 2 -q 10 filter that
#      left one read of a read pair intact; we also remove read pairs in
#      which one read was mapped with more than a 4kb gap (presumed intron)
#      and reads with TLEN greater than 5000; potential introns >= 50 nt
#      detecting read pairs are saved for further analysis (but not removed
#      from the final set for TSRchitect analysis - Scrubbed-${BAM}.bam)
#

${SCRIPTS}/scrubSAMfile.pl -p -i 50 -I 4000 -t 5000 -o $(basename $BAM _filtered.bam).sam -s $(basename $BAM _filtered.bam)_filtered_sorted.sam >& scrub.log              

done


cd ..

#Counting TSS tags and determining TSRs with TSRchitect:
#
cd tsr
 #mkdir BAMDIR
 cd BAMDIR

 for BAM in ../../BWAdir/*_filtered_sorted.bam
 do                                       
     ln -s ${BAM} ./                                                       # was previosly ln -s ../../${BAM} ./  
 done

     ln -s ${BASEDIR}/${GENOME_DIR}/${GENOME_GFF} PA42.4.0.gff
     cd ..
echo "... now running Rscript ${EXPERIMENT}wf*.Rscript"
 time ./xrunSwf all



